You are given the heads of two sorted linked lists list1 and list2. Merge the two lists into one sorted list. The list should be made by splicing together the nodes of the first two lists.
Return the head of the merged linked list.

Example 1:
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Example 2:
Input: list1 = [], list2 = []
Output: []

Example 3:
Input: list1 = [], list2 = [0]
Output: [0]

Code / C++:- 

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
   // dummy node and tail create krte h .
   ListNode dummy;
   ListNode*tail=&dummy;  //tail pointer hamesha merged list ke last node ko point karega, Start me dummy pr. 
       // Traverse both lists
       while(list1!= nullptr && list2!= nullptr){
        if(list1->val < list2->val){
            tail->next=list1; // attach to list1 node.
            list1= list1->next ;// list1 ko aage badha do (next node par aa jao).
        }
        else{
            tail->next=list2;
            list2=list2->next;
        }
        tail=tail->next;//Ab kyunki ek node joda, tail ko bhi aage shift kar do (new last node par).
       }
        // while loop end means any one list is empty.
        if(list1!= nullptr) tail->next=list1;
        if(list2!=nullptr) tail->next=list2;

        return dummy.next;//dummy ke baad jo node hai, wahi actual merged head hai. Use return karo.
          
    }
};
